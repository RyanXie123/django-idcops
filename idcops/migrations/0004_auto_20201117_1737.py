# Generated by Django 2.1.15 on 2020-11-17 17:37

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import idcops.lib.fields
import idcops.models


class Migration(migrations.Migration):

    dependencies = [
        ('idcops', '0003_device_urange'),
    ]

    operations = [
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('address', models.GenericIPAddressField(help_text='Presented as string.', unique=True, verbose_name='IP address')),
                ('hostname', idcops.lib.fields.NullableCharField(blank=True, default=None, max_length=255, null=True, verbose_name='Hostname')),
                ('is_management', models.BooleanField(default=False, verbose_name='Is management address')),
                ('is_public', models.BooleanField(default=False, editable=False, verbose_name='Is public address')),
                ('is_gateway', models.BooleanField(default=False, verbose_name='Is gateway address')),
                ('status', models.NullBooleanField(default=None, help_text='If the IP address is already in use, the value is True', verbose_name='status')),
                ('number', models.DecimalField(decimal_places=0, default=None, editable=False, help_text='Presented as int.', max_digits=39, unique=True, verbose_name='IP number')),
                ('client', models.ForeignKey(blank=True, help_text='该资源所属的客户信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_ipaddress_client', to='idcops.Client', verbose_name='所属客户')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_ipaddress_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': 'IP address',
                'verbose_name_plural': 'IP address',
                'ordering': ['address', 'network'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('address', idcops.lib.fields.IPNetwork(help_text='Presented as string (e.g. 172.16.21.0/24)', max_length=44, unique=True, verbose_name='network address')),
                ('vlan', models.PositiveIntegerField(blank=True, default=None, null=True, verbose_name='VLAN number')),
                ('is_public', models.BooleanField(default=None, editable=False, verbose_name='Is public address')),
                ('min_ip', models.DecimalField(decimal_places=0, editable=False, max_digits=39, verbose_name='smallest IP number')),
                ('max_ip', models.DecimalField(decimal_places=0, editable=False, max_digits=39, verbose_name='largest IP number')),
                ('dhcp_broadcast', models.BooleanField(db_index=True, default=True, verbose_name='broadcast in DHCP configuration')),
                ('reserved_from_beginning', models.PositiveIntegerField(default=1, help_text='Number of addresses to be omitted in DHCP automatic assignmentcounted from the first IP in range (excluding network address)', verbose_name='reserved from beginning')),
                ('reserved_from_end', models.PositiveIntegerField(default=1, help_text='Number of addresses to be omitted in DHCP automatic assignmentcounted from the last IP in range (excluding broadcast address)', verbose_name='reserved from end')),
                ('client', models.ForeignKey(blank=True, help_text='该资源所属的客户信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_network_client', to='idcops.Client', verbose_name='所属客户')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_network_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('gateway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_network_gateway', to='idcops.IPAddress', verbose_name='gateway address')),
                ('kind', models.ForeignKey(blank=True, help_text='Select from system options', limit_choices_to={'flag__icontains': 'Network-Kind'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_network_kind', to='idcops.Option', verbose_name='network kind')),
                ('onidc', models.ForeignKey(blank=True, help_text='该资源所属的机房', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_network_onidc', to='idcops.Idc', verbose_name='所属机房')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_network_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('parent', models.ForeignKey(blank=True, help_text='该对象的上一级关联对象', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_network_parent', to='idcops.Network', verbose_name='父级对象')),
                ('tags', models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自机房选项', limit_choices_to={'flag__icontains': 'tags'}, related_name='idcops_network_tags', to='idcops.Option', verbose_name='通用标签')),
            ],
            options={
                'verbose_name': 'network',
                'verbose_name_plural': 'networks',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
            bases=(idcops.models.NetworkMixin, models.Model),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='network',
            field=models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_ipaddress_network', to='idcops.Network', verbose_name='network zone'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该资源所属的机房', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_ipaddress_onidc', to='idcops.Idc', verbose_name='所属机房'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='operator',
            field=models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_ipaddress_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='该对象的上一级关联对象', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_ipaddress_parent', to='idcops.IPAddress', verbose_name='父级对象'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自机房选项', limit_choices_to={'flag__icontains': 'tags'}, related_name='idcops_ipaddress_tags', to='idcops.Option', verbose_name='通用标签'),
        ),
        migrations.AlterUniqueTogether(
            name='network',
            unique_together={('min_ip', 'max_ip')},
        ),
    ]
